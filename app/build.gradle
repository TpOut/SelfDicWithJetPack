apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.example.selfdicwithjetpack"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // room 数据库导出 可恢复数据
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }

        externalNativeBuild {
            // 可变化的配置项
            // For ndk-build, instead use the ndkBuild block.
            cmake {
//                // Passes optional arguments to CMake.
//                arguments "-DANDROID_ARM_NEON=TRUE", "-DANDROID_TOOLCHAIN=clang"
//                // Sets a flag to enable format macro constants for the C compiler.
//                cFlags "-D__STDC_FORMAT_MACROS"
//                // Sets optional flags for the C++ compiler.
//                cppFlags "-fexceptions", "-frtti"
                // gradle 构建这里的声明，如果不写，用ndk{} 里的
//                abiFilters 'armeabi-v7a'
            }
        }

        ndk {
            //构建这里的声明，会被cmake{}里的覆盖
            //打包这里的声明
            abiFilters 'armeabi-v7a' , 'x86'
//                    , 'x86_64', 'armeabi', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

    // prebuild
    // 如果库不是项目构建系统内的一部分，或者是CMake 中IMPORTED 指定的，那么需要放到这个目录下
    // ndk-build 方式的预构建库会被自动包含
//    sourceSets {
//        main {
//            jniLibs.srcDirs 'imported-lib/src/', 'more-imported-libs/src/'
//        }
//    }

    // 每个module 都可以单独指定，通用型的配置项
    // ndkVersion "major.minor.build"

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            //AS自动下载的有3.10.2，3.6.0，可以手动下载其他版本
            //默认3.10.2 ，如果不确定新版本可以写成 3.10.2+
            //version "3.6.0"
        }
//        ndkBuild{
//
//        }
    }
    ndkVersion '21.3.6528147'

//    productFlavors {
//        demo {
//            externalNativeBuild {
//                cmake {
//                    // 指定打包进apk 的可执行库和共享库，默认gradle 只打包共享库
//                    targets "native-lib-demo",
//                            "my-executible-demo"
//                }
//            }
//        }
//    }

    kotlinOptions {
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    // 系统
    implementation 'androidx.appcompat:appcompat:1.2.0'
    // ui
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    // 测试
    androidTestImplementation 'androidx.test:core:1.3.0'
    def fragment_version = "1.3.3"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version" //debugImplementation is used here so that the empty activity that FragmentScenario relies on is accessible by the test target process.
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 导航
    def navigation_version = "2.3.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // 工具类
    implementation 'com.blankj:utilcodex:1.29.0'
    // 存储
    implementation 'com.tencent:mmkv:1.2.7'

    def room_version = "2.3.0-alpha03"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //网络
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation("com.squareup.okhttp3:okhttp:4.9.0")

    def okhttpLoggingVersion = '4.7.2'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingVersion"

    // 分页
    def paging_version = "3.0.0-alpha12"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"


}